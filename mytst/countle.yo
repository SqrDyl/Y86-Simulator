0x000:                      |         .pos 0
                            | #initialize %rax to 0
0x000: 30f00000000000000000 | irmovq $0, %rax
0x00a: 30fb0000000000000000 | irmovq $0, %r11
                            | #initialize another register to the address of the first number
0x014: 30f8d800000000000000 | irmovq nums, %r8
                            | #it can also be helpful to initialize another register to 1
0x01e: 30f90100000000000000 | irmovq $1, %r9
                            | #for each number:  
                            | #get the number out of memory
0x028: 50a80000000000000000 | mrmovq (%r8), %r10
                            | #cause the condition codes to be modified based upon value of the number
                            | #add 1 to %rax if number <= 0; otherwise, add 0 to %rax
0x032: 60ba                 | addq %r11, %r10
0x034: 219b                 | cmovle %r9, %r11
0x036: 60b0                 | addq %r11, %rax
0x038: 30fb0000000000000000 | irmovq $0, %r11
                            | 
                            | 
0x042: 50a80800000000000000 | mrmovq 8(%r8), %r10
0x04c: 60ba                 | addq %r11, %r10
0x04e: 219b                 | cmovle %r9, %r11
0x050: 60b0                 | addq %r11, %rax
0x052: 30fb0000000000000000 | irmovq $0, %r11
                            | 
0x05c: 50a81000000000000000 | mrmovq 16(%r8), %r10
0x066: 60ba                 | addq %r11, %r10
0x068: 219b                 | cmovle %r9, %r11
0x06a: 60b0                 | addq %r11, %rax
0x06c: 30fb0000000000000000 | irmovq $0, %r11
                            | 
0x076: 50a81800000000000000 | mrmovq 24(%r8), %r10
0x080: 60ba                 | addq %r11, %r10
0x082: 219b                 | cmovle %r9, %r11
0x084: 60b0                 | addq %r11, %rax
0x086: 30fb0000000000000000 | irmovq $0, %r11
                            | 
0x090: 50a82000000000000000 | mrmovq 32(%r8), %r10
0x09a: 60ba                 | addq %r11, %r10
0x09c: 219b                 | cmovle %r9, %r11
0x09e: 60b0                 | addq %r11, %rax
0x0a0: 30fb0000000000000000 | irmovq $0, %r11
                            | 
0x0aa: 50a82800000000000000 | mrmovq 40(%r8), %r10
0x0b4: 60ba                 | addq %r11, %r10
0x0b6: 219b                 | cmovle %r9, %r11
0x0b8: 60b0                 | addq %r11, %rax
0x0ba: 30fb0000000000000000 | irmovq $0, %r11
                            | 
                            | 
                            | 
                            | #finally store %rax in memory location result
0x0c4: 400fd000000000000000 | rmmovq %rax, result
                            | 
                            | 
0x0ce: 00                   |         halt
0x0d0:                      |         .align 8
0x0d0: 0000000000000000     | result: .quad 0     #should be 3 at end
0x0d8: 0b00000000000000     | nums:   .quad 11
0x0e0: e9ffffffffffffff     |         .quad -23
0x0e8: 0000000000000000     |         .quad 0
0x0f0: 0f00000000000000     |         .quad 15
0x0f8: fdffffffffffffff     |         .quad -3
0x100: 0400000000000000     |         .quad 4
                            | 
