# perrin.ys
.pos 0  
.align 16

# Initialize registers
irmovq $3, %rax   
irmovq $0, %rcx   
irmovq $2, %rdx   

# Initialize remaining registers to 0
irmovq $0, %rbx
irmovq $0, %rsp
irmovq $0, %rbp
irmovq $0, %rsi
irmovq $0, %rdi
irmovq $0, %r8
irmovq $0, %r9
irmovq $0, %r10
irmovq $0, %r11
irmovq $0, %r12
irmovq $0, %r13
irmovq $0, %r14

#Calculate the registers in reverse order	

#Calculate Register rbx
addq %rax, %rbx
addq %rcx, %rbx

#Calculate Register rsp
addq %rcx, %rsp
addq %rdx, %rsp
	
#Calculate Register rbp
addq %rdx, %rbp
addq %rbx, %rbp
	
#Calculate Register rsi
addq %rbx, %rsi
addq %rsp, %rsi
	
#Calculate Register rdi
addq %rsp,%rdi
addq %rbp,%rdi

#Calculate Register 8
addq %rbp, %r8
addq %rsi, %r8

#Calculate Register 9
addq %rsi, %r9
addq %rdi, %r9

#Calculate Register 10
addq %rdi, %r10
addq %r8, %r10

#Calculate Register 11
addq %r8, %r11
addq %r9, %r11

#Calculate Register 12
addq %r9, %r12
addq %r10, %r12

#Calculate Register 13
addq %r10, %r13
addq %r11, %r13

#Calculate Register 14
addq %r11, %r14
addq %r12, %r14

#Reverse the registers

#Flip %rax and %r14
subq %rbx, %rax
addq %r14, %rax
subq %r14, %r14
addq %rbx, %r14

#Flip %rcx and %r13
addq %r13, %rcx
subq %r13, %r13

#Flip %rdx and %r12
subq %rdx, %rdx
addq %r12, %rdx
subq %r12, %r12
addq %rsp, %r12

#Flip %rbx and %r11
subq %rbx, %rbx
addq %r11, %rbx
subq %r11, %r11
addq %r14, %r11

#Flip %rsp and %r10
subq %rsp, %rsp
addq %r10, %rsp
subq %r10, %r10
addq  %r12, %r10

#Flip %rbp and %r9
subq %rbp, %rbp
addq %r9, %rbp
subq %r9, %r9
addq %r12, %r9
addq %r14, %r9

#Flip %rsi and %r8
subq %rsi, %rsi
addq %r8,%rsi
subq %r8,%r8
addq %r9, %r8

#End
halt  

